# .github/workflows/tag-on-merge.yml
name: Tag on Merge (and Manual)

on:
  pull_request:
    types: [closed]
    branches: [production]
  workflow_dispatch:
    inputs:
      version: { description: "v1.2.3", required: false }
      sha:
        {
          description: "Commit SHA (default: origin/production)",
          required: false,
        }

permissions:
  contents: write

jobs:
  tag:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, ref: production }

      - name: Compute TAG & TARGET_SHA
        id: comp
        shell: bash
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ inputs.version || '' }}"
            TARGET_SHA="${{ inputs.sha || '' }}"
            [ -n "$VERSION" ] || { echo "::error title=Missing version::inputs.version required"; exit 1; }
            [ -n "$TARGET_SHA" ] || TARGET_SHA="$(git rev-parse origin/production)"
          else
            TITLE="${{ github.event.pull_request.title }}"
            [[ "$TITLE" =~ ^(v[0-9]+\.[0-9]+\.[0-9]+)#.+$ ]] || { echo "::error::Title must be vX.Y.Z#ticket"; exit 1; }
            VERSION="${BASH_REMATCH[1]}"
            TARGET_SHA="${{ github.event.pull_request.merge_commit_sha }}"
            [ -n "$TARGET_SHA" ] || TARGET_SHA="$(git rev-parse origin/production)"
          fi
          SHORT_SHA="$(echo "$TARGET_SHA" | cut -c1-7)"
          TAG="${VERSION}-$(TZ=Asia/Tokyo date +%Y%m%d)-${SHORT_SHA}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "TARGET_SHA=$TARGET_SHA" >> $GITHUB_ENV
          echo "Computed $TAG for $TARGET_SHA"

      - name: Ensure TARGET_SHA exists (fetch if missing)
        shell: bash
        run: |
          set -euo pipefail
          git cat-file -e "${TARGET_SHA}^{commit}" 2>/dev/null || git fetch --no-tags origin "${TARGET_SHA}"
          git cat-file -e "${TARGET_SHA}^{commit}"

      - name: Create and push tag
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Tag $TAG" "$TARGET_SHA"
          git push origin "$TAG"

      - name: Trigger Pipeline with tag (reliable chaining)
        uses: peter-evans/workflow-dispatch@v3
        with:
          workflow: "Pipeline (tag or manual)" # ← 下のWFの name と一致させる
          ref: production
          inputs: |
            tag=${{ env.TAG }}
